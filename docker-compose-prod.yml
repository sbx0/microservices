version: '3.7'
services:

  microservices-registry:
    build:
      context: ./microservices-registry
      dockerfile: prod.Dockerfile
    network_mode: "host"
    deploy:
      resources:
        limits:
          memory: 200m

  microservices-configuration:
    build:
      context: ./microservices-configuration
      dockerfile: prod.Dockerfile
    network_mode: "host"
    volumes:
      - $CONFIG_LOCATION:$CONFIG_LOCATION
    depends_on:
      microservices-registry:
        condition: service_healthy
    environment:
      PASSWORD:
      CONFIG_LOCATION:
      REGISTRY_URL:
    deploy:
      resources:
        limits:
          memory: 200m

  microservices-gateway:
    build:
      context: ./microservices-gateway
      dockerfile: prod.Dockerfile
    network_mode: "host"
    depends_on:
      microservices-configuration:
        condition: service_healthy
      microservices-registry:
        condition: service_healthy
    environment:
      PASSWORD:
      CONFIG_URL:
      REGISTRY_URL:
      REDIS_HOST:
      REDIS_PASSWORD:
    deploy:
      resources:
        limits:
          memory: 200m

  microservices-account:
    build:
      context: ./microservices-account
      dockerfile: prod.Dockerfile
    network_mode: "host"
    depends_on:
      microservices-configuration:
        condition: service_healthy
      microservices-registry:
        condition: service_healthy
    environment:
      PASSWORD:
      CONFIG_URL:
      REGISTRY_URL:
      REDIS_HOST:
      REDIS_PASSWORD:
    deploy:
      resources:
        limits:
          memory: 200m

  microservices-uno:
    build:
      context: ./microservices-uno
      dockerfile: prod.Dockerfile
    network_mode: "host"
    depends_on:
      microservices-configuration:
        condition: service_healthy
      microservices-registry:
        condition: service_healthy
    environment:
      PASSWORD:
      CONFIG_URL:
      REGISTRY_URL:
      REDIS_HOST:
      REDIS_PASSWORD:
    deploy:
      resources:
        limits:
          memory: 500m
