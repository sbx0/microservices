version: '3.7'

services:

  microservices-registry:
    container_name: microservices-registry
    build:
      context: ./microservices-registry
      dockerfile: prod.Dockerfile
    volumes:
      - /etc/timezone:/etc/timezone
    network_mode: "host"
    deploy:
      resources:
        limits:
          memory: 300m
    restart: always
    environment:
      REGION:
      VERSION:
      REGISTRY_URL:
      SECURITY_NAME:
      SECURITY_PASSWORD:
      CONFIG_URL:
      HOST_CONFIG_LOCATION:
      CONFIG_LOCATION:
      REDIS_HOST:
      REDIS_PORT:
      REDIS_PASSWORD:
      DB_URL:
      DB_USERNAME:
      DB_PASSWORD:
      REGISTRY_PORT:
      REGISTRY_PROFILES:
      IP_ADDRESS:

  microservices-configuration:
    container_name: microservices-configuration
    build:
      context: ./microservices-configuration
      dockerfile: prod.Dockerfile
    volumes:
      - $HOST_CONFIG_LOCATION:$CONFIG_LOCATION
      - /etc/timezone:/etc/timezone
    network_mode: "host"
    deploy:
      resources:
        limits:
          memory: 300m
    restart: always
    depends_on:
      - microservices-registry
    environment:
      WAIT_HOSTS: localhost:8761
      REGION:
      VERSION:
      REGISTRY_URL:
      SECURITY_NAME:
      SECURITY_PASSWORD:
      CONFIG_URL:
      HOST_CONFIG_LOCATION:
      CONFIG_LOCATION:
      REDIS_HOST:
      REDIS_PORT:
      REDIS_PASSWORD:
      DB_URL:
      DB_USERNAME:
      DB_PASSWORD:
      CONFIGURATION_PORT:
      CONFIGURATION_PROFILES:
      IP_ADDRESS:

  microservices-gateway:
    container_name: microservices-gateway
    build:
      context: ./microservices-gateway
      dockerfile: prod.Dockerfile
    network_mode: "host"
    volumes:
      - /etc/timezone:/etc/timezone
    deploy:
      resources:
        limits:
          memory: 500m
    restart: always
    depends_on:
      - microservices-registry
      - microservices-configuration
    environment:
      WAIT_HOSTS: localhost:8761, localhost:8888
      REGION:
      VERSION:
      REGISTRY_URL:
      SECURITY_NAME:
      SECURITY_PASSWORD:
      CONFIG_URL:
      HOST_CONFIG_LOCATION:
      CONFIG_LOCATION:
      REDIS_HOST:
      REDIS_PORT:
      REDIS_PASSWORD:
      DB_URL:
      DB_USERNAME:
      DB_PASSWORD:
      GATEWAY_PORT:
      GATEWAY_PROFILES:
      NEXT_URL:
      IP_ADDRESS:

  microservices-account:
    container_name: microservices-account
    build:
      context: ./microservices-account
      dockerfile: prod.Dockerfile
    network_mode: "host"
    deploy:
      resources:
        limits:
          memory: 500m
    restart: always
    volumes:
      - /etc/timezone:/etc/timezone
    depends_on:
      - microservices-registry
      - microservices-configuration
    environment:
      WAIT_HOSTS: localhost:8761, localhost:8888
      REGION:
      VERSION:
      REGISTRY_URL:
      SECURITY_NAME:
      SECURITY_PASSWORD:
      CONFIG_URL:
      HOST_CONFIG_LOCATION:
      CONFIG_LOCATION:
      REDIS_HOST:
      REDIS_PORT:
      REDIS_PASSWORD:
      DB_URL:
      DB_USERNAME:
      DB_PASSWORD:
      ACCOUNT_PORT:
      ACCOUNT_PROFILES:
      IP_ADDRESS:

  microservices-uno:
    container_name: microservices-uno
    build:
      context: ./microservices-uno
      dockerfile: prod.Dockerfile
    network_mode: "host"
    deploy:
      resources:
        limits:
          memory: 500m
    volumes:
      - /etc/timezone:/etc/timezone
    depends_on:
      - microservices-registry
      - microservices-configuration
    environment:
      WAIT_HOSTS: localhost:8761, localhost:8888
      REGION:
      VERSION:
      REGISTRY_URL:
      SECURITY_NAME:
      SECURITY_PASSWORD:
      CONFIG_URL:
      HOST_CONFIG_LOCATION:
      CONFIG_LOCATION:
      REDIS_HOST:
      REDIS_PORT:
      REDIS_PASSWORD:
      DB_URL:
      DB_USERNAME:
      DB_PASSWORD:
      UNO_PORT:
      UNO_PROFILES:
      IP_ADDRESS:
